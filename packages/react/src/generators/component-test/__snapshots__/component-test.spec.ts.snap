// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`componentTestGenerator multiple components per file should handle default export 1`] = `
"import * as React from 'react'
import AnotherCmp, { AnotherCmpProps, AnotherCmp2 } from './some-lib'


describe(AnotherCmp.name, () => {
  let props: AnotherCmpProps;

  beforeEach(() => {
    props = {
      text: '',
      count: 0,
      isOkay: false,
      handleClick: undefined
    }
  })

  it('renders', () => {
    cy.mount(<AnotherCmp {...props}/>)
  })
})

describe(AnotherCmp2.name, () => {
  it('renders', () => {
    cy.mount(<AnotherCmp2 />)
  })
})

"
`;

exports[`componentTestGenerator multiple components per file should handle named exports 1`] = `
"import * as React from 'react'
import { AnotherCmpProps, AnotherCmp, AnotherCmp2 } from './some-lib'


describe(AnotherCmp.name, () => {
  let props: AnotherCmpProps;

  beforeEach(() => {
    props = {
      text: '',
      count: 0,
      isOkay: false,
      handleClick: undefined
    }
  })

  it('renders', () => {
    cy.mount(<AnotherCmp {...props}/>)
  })
})

describe(AnotherCmp2.name, () => {
  it('renders', () => {
    cy.mount(<AnotherCmp2 />)
  })
})

"
`;

exports[`componentTestGenerator multiple components per file should handle no props 1`] = `
"import * as React from 'react'
import SomeLib, { AnotherCmp } from './some-lib'


describe(SomeLib.name, () => {
  it('renders', () => {
    cy.mount(<SomeLib />)
  })
})

describe(AnotherCmp.name, () => {
  it('renders', () => {
    cy.mount(<AnotherCmp />)
  })
})

"
`;

exports[`componentTestGenerator multiple components per file should handle props 1`] = `
"import * as React from 'react'
import SomeLib, { AnotherCmpProps, AnotherCmp } from './some-lib'


describe(SomeLib.name, () => {
  it('renders', () => {
    cy.mount(<SomeLib />)
  })
})

describe(AnotherCmp.name, () => {
  let props: AnotherCmpProps;

  beforeEach(() => {
    props = {
      text: '',
      count: 0,
      isOkay: false,
      handleClick: undefined
    }
  })

  it('renders', () => {
    cy.mount(<AnotherCmp {...props}/>)
  })
})

"
`;

exports[`componentTestGenerator single component per file should handle default export 1`] = `
"import * as React from 'react'
import AnotherCmp, { AnotherCmpProps } from './some-lib'


describe(AnotherCmp.name, () => {
  let props: AnotherCmpProps;

  beforeEach(() => {
    props = {
      text: '',
      count: 0,
      isOkay: false,
      handleClick: undefined
    }
  })

  it('renders', () => {
    cy.mount(<AnotherCmp {...props}/>)
  })
})

"
`;

exports[`componentTestGenerator single component per file should handle named exports 1`] = `
"import * as React from 'react'
import { AnotherCmpProps, AnotherCmp } from './some-lib'


describe(AnotherCmp.name, () => {
  let props: AnotherCmpProps;

  beforeEach(() => {
    props = {
      text: '',
      count: 0,
      isOkay: false,
      handleClick: undefined
    }
  })

  it('renders', () => {
    cy.mount(<AnotherCmp {...props}/>)
  })
})

"
`;

exports[`componentTestGenerator single component per file should handle no props 1`] = `
"import * as React from 'react'
import SomeLib from './some-lib'


describe(SomeLib.name, () => {
  it('renders', () => {
    cy.mount(<SomeLib />)
  })
})

"
`;

exports[`componentTestGenerator single component per file should handle props 1`] = `
"import * as React from 'react'
import { AnotherCmpProps, AnotherCmp } from './some-lib'


describe(AnotherCmp.name, () => {
  let props: AnotherCmpProps;

  beforeEach(() => {
    props = {
      text: '',
      count: 0,
      isOkay: false,
      handleClick: undefined
    }
  })

  it('renders', () => {
    cy.mount(<AnotherCmp {...props}/>)
  })
})

"
`;
