// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ci-workflow generator circleci pipeline should match snapshot 1`] = `
"version: 2.1

orbs:
  nx: nrwl/nx@1.6.2

jobs:
  main:
    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: '-Xmx3g'
      GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2'
    docker:
      - image: cimg/openjdk:17.0-node
    steps:
      - checkout

      # Connect your workspace on nx.app and uncomment this to enable task distribution.
      # The "--stop-agents-after" is optional, but allows idle agents to shut down once the "build" targets have been requested
      # - run: npx nx-cloud start-ci-run --distribute-on="5 linux-medium-jvm" --stop-agents-after="build"

      - nx/set-shas:
          main-branch-name: 'main'

      - run: ./nx affected --base=$NX_BASE --head=$NX_HEAD -t test build

workflows:
  version: 2

  ci:
    jobs:
      - main
"
`;

exports[`ci-workflow generator github pipeline should match snapshot 1`] = `
"name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Connect your workspace on nx.app and uncomment this to enable task distribution.
      # The "--stop-agents-after" is optional, but allows idle agents to shut down once the "build" targets have been requested
      # - run: npx nx-cloud start-ci-run --distribute-on="5 linux-medium-jvm" --stop-agents-after="build"

      - name: Set up JDK 17 for x64
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - uses: nrwl/nx-set-shas@v4

      - run: ./nx affected -t test build
"
`;
